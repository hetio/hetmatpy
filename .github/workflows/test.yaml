name: Tests
on:
  push:
  pull_request:
  schedule:
    - cron: '10 10 1 * *'  # once a month

jobs:

  pytest:
    name: Python Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        python-version: ['3.6', '3.7', '3.8']
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ".[dev]"
    - name: Test with pytest
      run: pytest -rs --color=yes

  lint:
    name: Lint Python Code
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install Python
      uses: actions/setup-python@v2
    - name: Install dependencies
      run: pip install black flake8
    # - name: Check formatting
    #   run: |
    #     # if the following command fails, run `black .` locally to reformat the code.
    #     # ensure your local version of black matches the version installed on CI,
    #     # which will usually be the latest version from https://pypi.org/project/black/
    #     black --check --diff .
    - name: Check style
      run: flake8 hetmatpy

  docs:
    name: Build Docs
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install Python
      uses: actions/setup-python@v2
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install ".[dev]"
    - name: Build docs
      run: |
        # temporary workaround for portray "Module not found" error https://git.io/JeR9C
        export PYTHONPATH=.
        portray as_html --overwrite --output_dir=docs
    - name: Deploy docs
      if: github.ref == 'refs/heads/main' && github.event_name == 'push' && !github.event.repository.fork
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: docs
        publish_branch: gh-pages
